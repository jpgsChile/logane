{"abi":[],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122063344d6a2828c41121e5b794c7b56d8c660bfa5e058e5b551efb7cfdbae861ba64736f6c63430008180033","sourceMap":"783:1434:198:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea264697066735822122063344d6a2828c41121e5b794c7b56d8c660bfa5e058e5b551efb7cfdbae861ba64736f6c63430008180033","sourceMap":"783:1434:198:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for accessing historical block hashes beyond the standard 256 block limit. Uses EIP-2935's history storage contract which maintains a ring buffer of the last 8191 block hashes in state. For blocks within the last 256 blocks, it uses the native `BLOCKHASH` opcode. For blocks between 257 and 8191 blocks ago, it queries the EIP-2935 history storage. For blocks older than 8191 or future blocks, it returns zero, matching the `BLOCKHASH` behavior. NOTE: After EIP-2935 activation, it takes 8191 blocks to completely fill the history. Before that, only block hashes since the fork block will be available.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"HISTORY_STORAGE_ADDRESS\":{\"details\":\"Address of the EIP-2935 history storage contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Blockhash.sol\":\"Blockhash\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Blockhash.sol\":{\"keccak256\":\"0x0b5c53a0f84f5fa1a181168284cb080f04e382a33a0ba3e1b7e1d1e86448c9d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b47aaf8edb92c130e6a22b10d998afaa5417fbb12173cb02f6686587980da4\",\"dweb:/ipfs/QmdQKrtHueeX8NtjySacid47QyJ3UGcTzCbUM5queikorm\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Blockhash.sol":"Blockhash"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/Blockhash.sol":{"keccak256":"0x0b5c53a0f84f5fa1a181168284cb080f04e382a33a0ba3e1b7e1d1e86448c9d7","urls":["bzz-raw://a1b47aaf8edb92c130e6a22b10d998afaa5417fbb12173cb02f6686587980da4","dweb:/ipfs/QmdQKrtHueeX8NtjySacid47QyJ3UGcTzCbUM5queikorm"],"license":"MIT"}},"version":1},"id":198}